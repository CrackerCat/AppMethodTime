apply plugin: 'com.android.library'
apply plugin: com.zjw.plugin.MyPlugin

android {
    compileSdkVersion 28
    buildToolsVersion "28.0.3"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
}

AppMethodTime {
    //enabled默认值为true
    //enabled = true 表示允许插入函数耗时测量代码
    //enabled = false 表示不允许插入函数耗时测量代码
    enabled = true

    //useCostTime默认值为true
    // useCostTime = true 表示本lib module或本application module中build\intermediates\classes\debug目录下
    // class对应java文件中带有CostTime注解的方法才会在编译成class时被插入函数耗时测量代码，

    // useCostTime = false 表示本lib module或本application module中build\intermediates\classes\debug目录下
    // class对应java文件所有书写的方法均会在编译成class时被插入数耗时测量代码
    useCostTime = false

    //showLog默认值为true
    // showLog = true 表示允许在Gradle Console中输出插入函数耗时测量代码过程中的Log
    // showLog = false 表示不允许在Gradle Console中输出插入函数耗时测量代码过程中的Log
    showLog = true

    aarOrJarPath = "D:\\Github\\AppMethodTime\\mylibrary\\build\\outputs\\aar\\mylibrary-debug.aar"
}

